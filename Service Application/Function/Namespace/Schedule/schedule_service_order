void Schedule.schedule_service_order(int id)
{
	if(input.id != null)
	{
		fet_service_item = Service_Item[ID == input.id];
		if(fet_service_item.count() > 0)
		{
			for each  rec in Planned_Maintenance_Schedule[Service_Item == id]
			{
				fet_service_order = Service[Planned_Maintenance_Schedule == rec.ID];
				if(fet_service_order.count() > 0)
				{
					if(fet_service_order.Status != "Finished" && fet_service_order.Status != "Invoiced")
					{
						rec.Nearby_Schedule=false;
					}
					else
					{
						if(rec.Next_service_reading != null)
						{
							if(fet_service_item.Reading != null)
							{
								if(fet_service_item.Reading >= rec.Next_service_reading)
								{
									rec.Nearby_Schedule=true;
								}
								else
								{
									rec.Nearby_Schedule=false;
								}
							}
						}
						else
						{
							if(rec.Next_Service_Date >= zoho.currentdate.addWeek(2))
							{
								rec.Nearby_Schedule=true;
							}
							else
							{
								rec.Nearby_Schedule=false;
							}
						}
					}
				}
				else
				{
					if(rec.Next_service_reading != null)
					{
						if(fet_service_item.Reading != null)
						{
							if(fet_service_item.Reading >= rec.Next_service_reading)
							{
								rec.Nearby_Schedule=true;
							}
							else
							{
								rec.Nearby_Schedule=false;
							}
						}
					}
					else
					{
						if(rec.Next_Service_Date >= zoho.currentdate.addWeek(2))
						{
							rec.Nearby_Schedule=true;
						}
						else
						{
							rec.Nearby_Schedule=false;
						}
					}
				}
			}
		}
	}
}